name: CI

on:
  push:
    branches: ['**'] # すべてのブランチでCIを実行
  pull_request:
    branches: ['**'] # すべてのブランチに対するPRでCIを実行

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint and Type Check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript type check
        run: npm run type-check

      - name: Check Prettier formatting
        run: npm run format:check

  build:
    runs-on: ubuntu-latest
    name: Build Application

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup environment for CI
        run: |
          echo "CI=true" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_USE_MOCK_DATA=true" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_API_URL=http://localhost:8000" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_AUTH_API_URL=http://localhost:8000" >> $GITHUB_ENV

      - name: Build application
        run: npm run build:ci
        env:
          CI: true
          NEXT_PUBLIC_USE_MOCK_DATA: true
          NEXT_PUBLIC_API_URL: http://localhost:8000
          NEXT_PUBLIC_AUTH_API_URL: http://localhost:8000

      - name: Verify build output
        run: |
          if [ ! -d ".next" ]; then
            echo "Build output directory .next not found"
            exit 1
          fi
          if [ ! -f ".next/BUILD_ID" ]; then
            echo "Build ID file not found"
            exit 1
          fi
          echo "Build verification successful"

      - name: Cache build output
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
            .next/static
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: matrix.node-version == '20.x'
        with:
          name: build-output
          path: |
            .next/
            !.next/cache
          retention-days: 7

  test:
    runs-on: ubuntu-latest
    name: Run Tests

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup environment for CI
        run: |
          echo "CI=true" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_USE_MOCK_DATA=true" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_API_URL=http://localhost:8000" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_AUTH_API_URL=http://localhost:8000" >> $GITHUB_ENV

      - name: Run tests with coverage
        run: npm run test:ci

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: matrix.node-version == '20.x'
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  commitlint:
    runs-on: ubuntu-latest
    name: Commit Message Validation
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Validate commit messages
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose
